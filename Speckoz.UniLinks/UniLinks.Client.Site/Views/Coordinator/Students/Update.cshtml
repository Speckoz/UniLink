@using UniLinks.Client.Site.Models.Auxiliary

@inject UniLinks.Client.Site.Services.Coordinator.DisciplineService _disciplineService

@model ResultModel<StudentDisciplineVO>

@{
    ViewData["Title"] = "Editar Aluno";
}

@if (Model != null)
{
    switch (Model.StatusCode)
    {
        case System.Net.HttpStatusCode.OK:
            break;
        default:
            <script>
                sendMessage("@Model.Message", "error");
            </script>
            break;
    }
}

<h5 class="text-center theme-text" style="font-weight: 500; margin: 10px">@ViewData["Title"]</h5>
<hr />

<div style="padding-top: 20px">
    <div class="text-center">
        <span class="theme-text">Justo diam vel consetetur amet tempor amet ea quis amet facilisi tempor ut no et</span>
    </div>

    <form method="post" asp-controller="Students" asp-action="UpdateStudent">
        <div class="row">
            <div class="col-12">
                <div class="md-form">
                    <input type="text" id="studentId" class="form-control theme-text" asp-for="Object.Student.StudentId" readonly />
                    <label for="studentId">Id do Aluno</label>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-6">
                <div class="md-form">
                    <input type="text" id="studentName" class="form-control theme-text" asp-for="Object.Student.Name" />
                    <label for="studentName">Nome do Aluno</label>
                </div>
            </div>
            <div class="col-6">
                <div class="md-form">
                    <input type="text" id="studentEmail" class="form-control theme-text" asp-for="Object.Student.Email" />
                    <label for="studentEmail">Email do Aluno</label>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                @{
                    string token = User.FindFirst("Token").Value;
                    var disciplinesInCourse = await _disciplineService.GetDisciplinesByCoordIdTaskAsync(token);

                    List<AuxDisciplines> showedDisciplines = new List<AuxDisciplines>();
                    var periods = new HashSet<int>();
                    disciplinesInCourse.Object.ForEach(i => periods.Add(i.Period));
                    foreach (var period in periods)
                    {
                        showedDisciplines.Add(new AuxDisciplines
                        {
                            Period = period,
                            Disciplines = disciplinesInCourse.Object.Where(x => x.Period == period).Select(x => new AuxDiscipline()
                            {
                                DisciplineId = x.DisciplineId,
                                Discipline = x.Name
                            }).ToList()
                        });
                    }
                }

                @* Input para servir de comunicador entre o JS e C# *@
                <input asp-for="Object.Student.Disciplines" id="inputTest" style="display: none" type="text" />
                <div data-test-hook="groups">
                    
                    <label style="font-size: 14px; color: #757575;">Disciplinas do Aluno</label>
                    <select class="md-form" name="studentDisciplines" id="studentDisciplines" multiple>
                        @foreach (var disciplines in showedDisciplines)
                        {
                        <optgroup label="@(disciplines.Period)° Perído">
                            @foreach (var discipline in disciplines.Disciplines)
                            {
                                bool isEquals = Model?.Object?.Student?.Disciplines?.Contains(discipline.DisciplineId.ToString()) ?? false;
                                <option selected="@(isEquals ? "selected" : null)" value="@discipline.DisciplineId">@discipline.Discipline</option>
                            }
                        </optgroup>
                        }
                    </select>
                </div>

                <script src="~/js/choices.js"></script>
                <script>
                    const inputT = document.getElementById("inputTest");

                    function addValues() {
                        inputT.value = groupselect.getValue().map(obj => obj.value).join(';');
                    }

                    var groupselect = new Choices('#studentDisciplines', {
                        removeItemButton: true
                    });

                    groupselect.passedElement.element.addEventListener(
                        'removeItem',
                        function (event) {
                            const idsArray = inputT.value.split(';');

                            const index = idsArray.indexOf(event.detail.value);
                            if (index > -1) {
                                idsArray.splice(index, 1);
                            }

                            inputT.value = idsArray.map(x => x).join(';');
                        }
                    );
                </script>
            </div>
        </div>

        <div class="row justify-content-center">
            <button onclick="addValues()" class="btn btn-primary waves-effect">Salvar</button>
            <a class="btn btn-outline-primary waves-effect" asp-action="Index" asp-controller="Students">Voltar</a>
        </div>
    </form>
</div>