@inject UniLinks.Client.Site.Services.DisciplinesPeriodsService _disciplinePeriodsService

@model ResultModel<StudentDisciplineVO>

@{
    ViewData["Title"] = "Adicionar Aluno";
}

@if (Model != null)
{
    switch (Model.StatusCode)
    {
        case System.Net.HttpStatusCode.Created:
        case System.Net.HttpStatusCode.OK:
            break;
        default:
            <script>
                sendMessage("@Model.Message", "error");
            </script>
            break;
    }
}

<div style="padding-top: 20px">
    <div class="text-center">
        <span class="theme-text">Justo diam vel consetetur amet tempor amet ea quis amet facilisi tempor ut no et</span>
    </div>
    <div style="padding: 10px">
        <form method="post" asp-controller="Students" asp-action="AddStudent">
            <div class="row">
                <div class="col-6">
                    <div class="form-group md-form">
                        <input type="text" id="studentName" class="form-control theme-text validate" asp-for="Object.Student.Name" required />
                        <label for="studentName" data-error="wrong" data-success="right">Nome do Aluno</label>
                    </div>
                </div>
                <div class="col-6">
                    <div class="form-group md-form">
                        <input type="text" id="studentEmail" class="form-control theme-text validate" asp-for="Object.Student.Email" required />
                        <label for="studentEmail" data-error="wrong" data-success="right">Email do Aluno</label>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-12">
                    @{
                        var showedDisciplines = await _disciplinePeriodsService.GetDisciplinesAsync();
                    }

                    @* Input para servir de comunicador entre o JS e C# *@
                    <input asp-for="Object.Student.Disciplines" id="inputTest" style="display: none" type="text"/>
                    <div data-test-hook="groups">

                        <label style="font-size: 14px; color: #757575;">Disciplinas do Aluno</label>
                        <select class="md-form" name="studentDisciplines" id="studentDisciplines" multiple>
                            @foreach (var disciplines in showedDisciplines)
                            {
                                <optgroup label="@(disciplines.Period)° Perído">
                                    @foreach (var discipline in disciplines.Disciplines)
                                    {

                                        bool isEquals = Model?.Object?.Student?.Disciplines?.Contains(discipline.DisciplineId.ToString()) ?? false;
                                        <option selected="@(isEquals ? "selected" : null)" value="@discipline.DisciplineId">@discipline.Discipline</option>
                                    }
                                </optgroup>
                            }
                        </select>
                    </div>

                    <script src="~/js/choices.js"></script>
                    <script>
                        const inputT = document.getElementById("inputTest");

                        function addValues() {
                            inputT.value = groupselect.getValue().map(obj => obj.value).join(';');
                        }

                        var groupselect = new Choices('#studentDisciplines', {
                            removeItemButton: true
                        });

                        groupselect.passedElement.element.addEventListener(
                            'removeItem',
                            function (event) {
                                const idsArray = inputT.value.split(';');

                                const index = idsArray.indexOf(event.detail.value);
                                if (index > -1) {
                                    idsArray.splice(index, 1);
                                }

                                inputT.value = idsArray.map(x => x).join(';');
                            }
                        );
                    </script>
                </div>
            </div>

            <div class="row justify-content-center" style="margin-top: 35px">
                <button type="submit" onclick="addValues()" class="btn btn-success waves-effect">Adicionar</button>
                <a class="btn btn-outline-grey waves-effect" asp-action="Index" asp-controller="Students">Voltar</a>
            </div>
        </form>
    </div>
</div>