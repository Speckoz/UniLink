@using EnumsNET

@model ResultModel<List<ClassVO>>

@{
    ViewData["Title"] = "Salas";
}

@if (Model != null)
{
    switch (Model.StatusCode)
    {
        case System.Net.HttpStatusCode.OK:
        case System.Net.HttpStatusCode.Created:
        case System.Net.HttpStatusCode.NoContent:
            <script>
                sendMessage("@Model.Message", "success");
            </script>
            break;
        default:
            <script>
                sendMessage("@Model.Message", "error");
            </script>
            break;
    }
}

<h5 class="text-center theme-text" style="font-weight: 500; margin: 10px">@ViewData["Title"]</h5>
<hr />

<a class="btn btn-primary" href="/Coordinator/Classes/Add">Adicionar</a>
<div class="card-deck" style="margin: 20px">
    @foreach (ClassVO item in Model.Object)
    {
        <div class="card mb-4 theme-bg theme-text" style="max-width: 230px; align-self: center; width: 230px; align-items: center;">
            <div class="card-body">
                <h5 class="card-title text-center">@(item.Period)º Período</h5>
                <p class="card-text text-center">
                    @(item.WeekDays.AsString(EnumFormat.DisplayName))
                </p>
                <a class="btn waves-effect btn-success btn-md" href="@item.URI" target="_blank">Abrir Sala</a>
                <a class="btn waves-effect btn-danger btn-md" href="/Coordinator/Classes/Update/@item.ClassId">Editar</a>
            </div>
        </div>
    }
</div>